package com.bbt.kangel.dbtesingsystem.activity;import android.content.Intent;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.support.v7.widget.Toolbar;import android.util.Log;import android.view.MotionEvent;import android.view.View;import android.view.animation.AnimationUtils;import android.widget.EditText;import android.widget.RadioGroup;import android.widget.RelativeLayout;import com.bbt.kangel.dbtesingsystem.R;import com.bbt.kangel.dbtesingsystem.adapter.TeacherViewGradeAdapter;import com.bbt.kangel.dbtesingsystem.fragment.SelectPaperDialogFragment;import com.bbt.kangel.dbtesingsystem.util.DataBaseHelper;import com.bbt.kangel.dbtesingsystem.util.DialogActivity;import com.bbt.kangel.dbtesingsystem.util.GlobalKeeper;import com.bbt.kangel.dbtesingsystem.util.TestDataBaseUtil;/** * Created by Kangel on 2016/2/17. */public class TeacherViewGradeActivity extends AppCompatActivity implements View.OnClickListener, DialogActivity {    private SQLiteDatabase db;    private Cursor c;    private TeacherViewGradeAdapter adapter;    private RadioGroup radioGroup;    private RelativeLayout filterLayout;    private EditText fromGradeEdit, toGradeEdit, pidEdit;    private String PID = "PID";    private String orderBy = "PID";    private String fromGrade = "0", toGrade = "100";    private SelectPaperDialogFragment selectPaperDialogFragment;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_teacher_view_grade);        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);        toolbar.setNavigationOnClickListener(this);        DataBaseHelper helper = new DataBaseHelper(TeacherViewGradeActivity.this, GlobalKeeper.DB_NAME, 1);        db = helper.getReadableDatabase();        c = TestDataBaseUtil.getGradesList(db, PID, orderBy, fromGrade, toGrade);        adapter = new TeacherViewGradeAdapter(TeacherViewGradeActivity.this, c);        RecyclerView rv = (RecyclerView) findViewById(R.id.recycle_view);        rv.setHasFixedSize(true);        rv.setLayoutManager(new LinearLayoutManager(this));        rv.setAdapter(adapter);        radioGroup = (RadioGroup) findViewById(R.id.order_rule_list);        radioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {            @Override            public void onCheckedChanged(RadioGroup group, int checkedId) {                switch (checkedId) {                    case R.id.button_by_sname: {                        orderBy = "SNAME";                        break;                    }                    case R.id.button_by_sno: {                        orderBy = "SNO";                        break;                    }                    case R.id.button_by_grade: {                        orderBy = "GRADE";                        break;                    }                    case R.id.button_by_pid: {                        orderBy = "PID";                        break;                    }                }                Log.i("order", orderBy);                notifyRecyclerViewChanged();                toggleView(radioGroup);            }        });        filterLayout = (RelativeLayout) findViewById(R.id.filter_layout);        fromGradeEdit = (EditText) findViewById(R.id.edit_grade_from);        toGradeEdit = (EditText) findViewById(R.id.edit_grade_to);        pidEdit = (EditText) findViewById(R.id.edit_pid);    }    @Override    protected void onDestroy() {        super.onDestroy();        if (db != null && db.isOpen()) {            db.close();        }        if (c != null && !c.isClosed()) {            c.close();        }    }    @Override    public boolean dispatchTouchEvent(MotionEvent ev) {        int left = radioGroup.getLeft();        int top = radioGroup.getTop();        int right = radioGroup.getRight();        int bottom = radioGroup.getBottom();        if (radioGroup.isShown() && (ev.getRawX() > right || ev.getRawX() < left || ev.getRawX() > bottom || ev.getRawX() < top)) {            toggleView(radioGroup);            return true;        }        return super.dispatchTouchEvent(ev);    }    @Override    public void onBackPressed() {        if (filterLayout.isShown()) {            toggleView(filterLayout);            return;        }        if (radioGroup.isShown()) {            toggleView(radioGroup);            return;        }        super.onBackPressed();    }    @Override    public void onClick(View v) {        switch (v.getId()) {            case R.id.order_button: {                toggleView(radioGroup);                break;            }            case R.id.show_statistics_button: {                Intent intent = new Intent(TeacherViewGradeActivity.this, ShowStatisticsActivity.class);                Bundle args = new Bundle();                Cursor cursor = db.rawQuery("select max(GRADE) MAX,min(GRADE) MIN,avg(GRADE) AVG from grades where PID = " + PID + " and GRADE between " + fromGrade + " and " + toGrade, null);                cursor.moveToFirst();                args.putInt("max", cursor.getInt(cursor.getColumnIndex("MAX")));                args.putInt("min", cursor.getInt(cursor.getColumnIndex("MIN")));                args.putInt("avg", cursor.getInt(cursor.getColumnIndex("AVG")));                intent.putExtras(args);                cursor.close();                startActivity(intent);                break;            }            case R.id.show_filter_button: {                toggleView(filterLayout);                break;            }            case R.id.ok_button: {                fromGrade = fromGradeEdit.getText().toString().isEmpty() ? "0" : fromGradeEdit.getText().toString();                toGrade = toGradeEdit.getText().toString().isEmpty() ? "100" : toGradeEdit.getText().toString();                PID = pidEdit.getText().toString().isEmpty() ? "PID" : pidEdit.getText().toString();                notifyRecyclerViewChanged();                toggleView(filterLayout);                break;            }            case R.id.reset_button: {                fromGradeEdit.setText("");                toGradeEdit.setText("");                pidEdit.setText("");                break;            }            case R.id.edit_pid: {                if (selectPaperDialogFragment == null) {                    selectPaperDialogFragment = new SelectPaperDialogFragment();                }                selectPaperDialogFragment.show(getSupportFragmentManager(), "select");                break;            }            default: {                finish();            }        }    }    @Override    public void dismissDialog() {    }    @Override    public void doAtPositiveButton(String tag) {    }    @Override    public void onDialogItemSelect(String tag,Bundle args) {        selectPaperDialogFragment.dismiss();        pidEdit.setText(args.getString("PID"));    }    private void toggleView(View v) {        if (v.isShown()) {            v.setAnimation(AnimationUtils.loadAnimation(this, R.anim.anim_slide_up));            v.setVisibility(View.GONE);        } else {            v.setAnimation(AnimationUtils.loadAnimation(this, R.anim.anim_slide_down));            v.setVisibility(View.VISIBLE);        }    }    private void notifyRecyclerViewChanged() {        c.close();        c = TestDataBaseUtil.getGradesList(db, PID, orderBy, fromGrade, toGrade);        adapter.updateCursor(c);        adapter.notifyDataSetChanged();    }}